# Redis配置文件示例

# 绑定的IP地址，设置为0.0.0.0表示允许所有IP地址连接到Redis服务
# 在生产环境中，建议根据实际情况绑定特定的IP地址，以增强安全性
bind 0.0.0.0

# 监听的端口号，默认是6379
port 6379

# 设置Redis以守护进程的方式运行，这样Redis会在后台运行，不会占用当前终端
# 生产环境中通常会开启此选项
daemonize yes

# 设置PID文件的路径，用于存储Redis服务器的进程ID
pidfile /var/run/redis.pid

# 设置日志级别，可选值有 debug、verbose、notice、warning，生产环境一般设置为 notice 或 warning
loglevel notice

# 设置日志文件的路径，将日志输出到指定文件
logfile /var/log/redis/redis.log

# 设置数据库的数量，默认是16个数据库，可以根据实际需求进行调整
databases 16

# 设置在多长时间内客户端连接无操作后关闭连接，单位是秒
# 可以防止空闲连接占用过多资源
timeout 300

# 设置Redis最大内存限制，当内存使用达到此限制时，Redis会根据配置的淘汰策略来删除键值对
# 例如设置为10GB，格式为数字后面跟单位，如 10gb
maxmemory 10gb

# 设置内存淘汰策略，常见的策略有以下几种：
# noeviction：当内存不足以容纳新写入数据时，新写入操作会报错
# allkeys-lru：从所有键中使用LRU算法淘汰最近最少使用的键
# volatile-lru：从设置了过期时间的键中使用LRU算法淘汰最近最少使用的键
# allkeys-random：从所有键中随机淘汰键
# volatile-random：从设置了过期时间的键中随机淘汰键
# volatile-ttl：从设置了过期时间的键中淘汰剩余存活时间最短的键
maxmemory-policy allkeys-lru

# 开启RDB持久化，即在指定的时间间隔内，将内存中的数据快照保存到磁盘上
# save 900 1 表示在900秒内至少有1个键被修改时，进行一次数据快照保存
# save 300 10 表示在300秒内至少有10个键被修改时，进行一次数据快照保存
# save 60 10000 表示在60秒内至少有10000个键被修改时，进行一次数据快照保存
save 900 1
save 300 10
save 60 10000

# 设置RDB持久化文件的文件名
dbfilename dump.rdb

# 设置RDB持久化文件的存储路径
dir /var/lib/redis

# 开启AOF持久化，将每一条写命令追加到AOF文件中，以实现数据的持久化
# appendonly yes表示开启AOF持久化，appendonly no表示关闭AOF持久化
appendonly yes

# 设置AOF文件的名称
appendfilename "appendonly.aof"

# 设置AOF文件的刷写策略，常见的策略有以下几种：
# always：每次有写操作都立即同步到AOF文件，数据安全性最高，但性能较差
# everysec：每秒将缓冲区中的命令写入AOF文件并同步到磁盘，是性能和数据安全性的平衡选择
# no：由操作系统决定何时将缓冲区中的数据写入磁盘，性能最好，但数据安全性较低
appendfsync everysec

# 在AOF重写期间，是否允许同时进行AOF文件的写入操作
# no-appendfsync-on-rewrite yes表示在AOF重写期间不进行AOF文件的写入操作，以提高AOF重写的性能
# no-appendfsync-on-rewrite no表示在AOF重写期间仍然允许进行AOF文件的写入操作
no-appendfsync-on-rewrite yes